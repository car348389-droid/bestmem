import sqlite3


def show_all(db_name="videos.db"):
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()

    cursor.execute("SELECT * FROM videos")
    rows = cursor.fetchall()

    for row in rows:
        print(row)
        
# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã ---
def init_db(db_name="videos.db"):
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()

    cursor.execute("""
    CREATE TABLE IF NOT EXISTS videos (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        video_id TEXT UNIQUE,
        status TEXT DEFAULT 'new',  -- new | downloaded | processed
        added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    )
    """)
    conn.commit()
    conn.close()


# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è video_id ---
def save_video_id(video_id, title, db_name="videos.db"):
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()

    try:
        cursor.execute(
            "INSERT INTO videos (video_id, title, status) VALUES (?, ?, 'new')",
            (video_id, title)
        )
        conn.commit()
        print(f"‚úÖ –ù–æ–≤—ã–π video_id —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {video_id}, title: {title}")
        result = True
    except sqlite3.IntegrityError:
        print(f"‚è≠ video_id —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ: {video_id}")
        result = False

    conn.close()
    return result


# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö video_id (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏) ---
def get_all_video_ids(db_name="videos.db"):
    import sqlite3
    from datetime import datetime

    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()

    # –¢–µ–ø–µ—Ä—å —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é (—Å—Ç–∞—Ä—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    cursor.execute("SELECT video_id, status, added_at, title FROM videos ORDER BY added_at ASC")

    rows = cursor.fetchall()
    conn.close()

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π
    return [
        {
            "video_id": r[0],
            "status": r[1],
            "added_at": r[2] if isinstance(r[2], str) else datetime.fromtimestamp(r[2]).isoformat(),
            "title": r[3]
        }
        for r in rows
    ]


def update_video_status(video_id, status, db_name="videos.db"):
    conn = sqlite3.connect(db_name)
    cursor = conn.cursor()

    cursor.execute("UPDATE videos SET status=? WHERE video_id=?", (status, video_id))
    conn.commit()
    conn.close()
    print(f"üîÑ –°—Ç–∞—Ç—É—Å {video_id} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ '{status}'")
